import { Injectable, NgZone, OnDestroy, OnInit } from '@angular/core';

@Injectable({
  providedIn: 'root',
})
export class DevtoolsService implements OnInit, OnDestroy {
  private devToolsOpened = false;
  private intervalId: any;

  constructor(private ngZone: NgZone) {}

  ngOnInit(): void {
    this.initDevtoolsDetection();
  }

  ngOnDestroy(): void {
    if (this.intervalId) {
      clearInterval(this.intervalId);  // Clear the interval when service is destroyed
    }
  }

  // Initialize the detection logic
  initDevtoolsDetection(): void {
    this.detectDevTools(); // Run detection on app load

    // Continuously check if DevTools is opened
    this.intervalId = setInterval(() => {
      this.ngZone.runOutsideAngular(() => {
        this.detectDevTools();
      });
    }, 1000);  // Check every second
  }

  // Function to detect if DevTools is open using `console.log` behavior
  private detectDevTools(): void {
    const devtools = /./;
    devtools.toString = () => {
      // If DevTools is open, the toString method is triggered
      if (!this.devToolsOpened) {
        this.devToolsOpened = true;
        this.clearConsoleAndWarn(); // DevTools just opened, take action
        this.stopDetection(); // Stop further detection and logging
      }
      return '';
    };
    console.log('%c', devtools); // This triggers toString when DevTools is open
  }

  // Function to clear console and show custom warning
  private clearConsoleAndWarn(): void {
    console.clear();

    // Display the message in both Vietnamese and English with improved styling and icons
    const icon = '‚ö†Ô∏è'; // You can replace this with a different Unicode icon if needed
    const iconPerson = 'üôã';

    // Display header
    console.log(`%c${iconPerson}  Unicourse - N·ªÅn t·∫£ng h·ªçc t·∫≠p tr·ª±c tuy·∫øn`, 'color: #1E90FF; font-size: 20px; font-weight: bold; padding: 10px 0;');
    
    // Vietnamese version
    console.log(
      `%c${iconPerson} Xin ch√†o c√°c b·∫°n \nUnicourse l√† n·ªÅn t·∫£ng h·ªçc t·∫≠p tr·ª±c tuy·∫øn cung c·∫•p c√°c kh√≥a h·ªçc chuy√™n nghi·ªáp ph√π h·ª£p v·ªõi sinh vi√™n v√† ng∆∞·ªùi ƒëi l√†m. C√°c kh√≥a h·ªçc bao g·ªìm React, Angular, Ti·∫øng Trung, Ti·∫øng Nh·∫≠t v√† nhi·ªÅu h∆°n n·ªØa.\n- ƒê·ªÉ h·ª£p t√°c v·ªõi ch√∫ng t√¥i, vui l√≤ng truy c·∫≠p: %chttps://unicourse.vn/contact\n\n%c${icon} C·∫£nh b√°o \nM·ªçi h√†nh vi sao ch√©p ho·∫∑c ƒëƒÉng t·∫£i l·∫°i video t·ª´ n·ªÅn t·∫£ng n√†y m√† kh√¥ng ƒë∆∞·ª£c ph√©p s·∫Ω b·ªã x·ª≠ l√Ω theo ph√°p lu·∫≠t.`,
      'font-size: 16px; color: white; line-height: 1.5rem;',
      'font-size: 16px; color: #1E90FF; text-decoration: underline;',
      'font-size: 16px; color: #FF6347;  line-height: 1.5rem;'
    );
    
    // English version
    console.log(
      `%c${iconPerson} Hello \nUnicourse is an online learning platform that provides professional courses tailored for students and working professionals. Our courses include React, Angular, Chinese, Japanese, and much more.\n- If you wish to collaborate with us, please visit: %chttps://unicourse.vn/contact\n\n%c${icon} Warning \nAny act of copying or re-uploading videos from this platform without permission will be subject to legal action.`,
      'font-size: 16px; color: white; line-height: 1.5rem;',
      'font-size: 16px; color: #1E90FF; text-decoration: underline;',
      'font-size: 16px; color: #FF6347;  line-height: 1.5rem;'
    );

    // Block future `console.log` calls after the first detection
    this.blockConsoleLogging();
  }

  // Function to block future console.log calls
  private blockConsoleLogging(): void {
    console.log = function () {};
  }

  // Stop detection by clearing the interval
  private stopDetection(): void {
    if (this.intervalId) {
      clearInterval(this.intervalId);  // Stop the interval after detecting once
      this.intervalId = null;
    }
  }
}